#include "SceSdifResponsePackets.h"

//I coded different dynamic parts of packets with different values
//real values and the protocol are already know so this is just dummy data for testing

char response2[0x20] = 
{
   0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x13,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x01,0x01,0x04,0x00,0x00,0x00,0x00,0x00,
};

char response4[0x20] = 
{
   0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x05,0x00,0xFF,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

char response6[0x40] = 
{
   0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x2B,0x00,0xE0,0x00,0x00,0x01,0x00,
   0x02,0x00,0x03,0x00,0x01,0x00,0x01,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
   0xFE,0x95,0xF2,0xC2,0x73,0xE9,0x45,0x42,
   0x08,0x00,0x5F,0xE8,0x56,0x07,0x99,0xDD,
   0xF9,0x1F,0x9F,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

//BB - for 0x03 bytes in the beginning of key
//EE - for 0x1D key
//DD - for 0x03 bytes in the end of key

char response8[0x30] = 
{
   0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0xBB,0xBB,0x00,0xEE,0xEE,0xEE,0xEE,0xEE,
   0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,
   0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,
   0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,0xEE,
   0xDD,0xDD,0xDD,0x00,0x00,0x00,0x00,0x00,
};

char response10[0x20] = 
{
   0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

char response12[0x20] = 
{
   0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

//TODO: NEED TO VALUE CODE THIS VALUES

char response14[0x50] = 
{
   0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
};

//TODO: NEED TO VALUE CODE THIS VALUES

char response16[0x50] = 
{
   0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
};

//TODO: NEED TO VALUE CODE THIS VALUES

char response18[0x50] = 
{
   0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
};

//TODO: NEED TO VALUE CODE THIS VALUES

char response20[0x60] = 
{
   0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
   0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
};